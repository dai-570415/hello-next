{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // Blog Sample\n// const PostLink = ({ id, title, content }) => {\n//     return (\n//         <li>\n//             <Link as={`/p/${id}`} href={`/post?title=${title}&content=${content}`}>\n//                 <a>{title}</a>\n//             </Link>\n//         </li>\n//     );\n// }\n// const Index = () => {\n//     return (\n//         <Layout>\n// Blog \n//             <h3>Blog Sample</h3>\n//             <ul>\n//                 <PostLink\n//                     id=\"1\"\n//                     title=\"初めてのNextアプリです\"\n//                     content=\"NextでBlogチュートリアルに挑戦NextでBlogチュートリアルに挑戦NextでBlogチュートリアルに挑戦NextでBlogチュートリアルに挑戦NextでBlogチュートリアルに挑戦\"\n//                 /> \n//             </ul>\n//         </Layout>\n//     );\n// }\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(\"h3\", null, \"Fetch Sample\"), __jsx(\"ul\", null, props.shows.map(function (_ref) {\n    var show = _ref.show;\n    return __jsx(\"li\", {\n      key: show.id\n    }, __jsx(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/detail?id=\".concat(show.id)\n    }, __jsx(\"a\", null, show.name)));\n  })));\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            shows: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/moridaisuke/next-app/hello-next/pages/post.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","json","data"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,SACI,MAAC,MAAD,QACI,iCADJ,EAEI,kBACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB;AAAA,QAAEC,IAAF,QAAEA,IAAF;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,OACA,MAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,uBAAgBD,IAAI,CAACC,EAArB;AAA/B,OACI,iBAAID,IAAI,CAACE,IAAT,CADJ,CADA,CADa;AAAA,GAAhB,CADL,CAFJ,CADJ;AAcH,CAfD;;KAAMN,K;AAgBNA,KAAK,CAACO,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFR,KAAK,CAAC,8CAAD,CADH;;AAAA;AACdS,UAAAA,GADc;AAAA;AAAA,iBAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAAA,2CAGb;AACHR,YAAAA,KAAK,EAAEQ;AADJ,WAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAQA,eAAeV,KAAf","sourcesContent":["import Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\n// Blog Sample\n// const PostLink = ({ id, title, content }) => {\n//     return (\n//         <li>\n//             <Link as={`/p/${id}`} href={`/post?title=${title}&content=${content}`}>\n//                 <a>{title}</a>\n//             </Link>\n//         </li>\n//     );\n// }\n// const Index = () => {\n//     return (\n//         <Layout>\n// Blog \n//             <h3>Blog Sample</h3>\n//             <ul>\n//                 <PostLink\n//                     id=\"1\"\n//                     title=\"初めてのNextアプリです\"\n//                     content=\"NextでBlogチュートリアルに挑戦NextでBlogチュートリアルに挑戦NextでBlogチュートリアルに挑戦NextでBlogチュートリアルに挑戦NextでBlogチュートリアルに挑戦\"\n//                 /> \n//             </ul>\n//         </Layout>\n//     );\n// }\n\nconst Index = (props) => {\n    return (\n        <Layout>\n            <h3>Fetch Sample</h3>\n            <ul>\n                {props.shows.map(({show}) => (\n                    <li key={show.id}>\n                    <Link as={`/p/${show.id}`} href={`/detail?id=${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                    </li>\n                ))}\n            </ul>\n        </Layout>\n    );\n}\nIndex.getInitialProps = async () => {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n    return {\n        shows: data,\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}