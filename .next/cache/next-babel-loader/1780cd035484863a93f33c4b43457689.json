{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(\"h3\", {\n    className: \"jsx-1453281635\"\n  }, \"Fetch Sample\"), __jsx(\"ul\", {\n    className: \"jsx-1453281635\" + \" \" + \"items\"\n  }, props.shows.map(function (_ref) {\n    var show = _ref.show;\n    return __jsx(\"li\", {\n      key: show.id,\n      className: \"jsx-1453281635\" + \" \" + \"item\"\n    }, __jsx(Link, {\n      as: \"/f/\".concat(show.id),\n      href: \"/fetch/detail?id=\".concat(show.id)\n    }, __jsx(\"img\", {\n      src: show.image.medium,\n      className: \"jsx-1453281635\"\n    }), __jsx(\"a\", {\n      className: \"jsx-1453281635\" + \" \" + \"item-link\"\n    }, show.name)));\n  })), __jsx(_JSXStyle, {\n    id: \"1453281635\"\n  }, \".items.jsx-1453281635{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}.items.jsx-1453281635 .item.jsx-1453281635{width:30%;margin:0 0 50px 0;}.items.jsx-1453281635 .item.jsx-1453281635 img.jsx-1453281635{width:100%;}.items.jsx-1453281635 .item.jsx-1453281635 .item-link.jsx-1453281635{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;font-size:14px;margin:15px 0 0 0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb3JpZGFpc3VrZS9uZXh0LWFwcC9oZWxsby1uZXh0L3BhZ2VzL2ZldGNoL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtCd0IsQUFHa0MsQUFLSCxBQUlDLEFBR0UsVUFOSyxDQUl0QixpQkFIQSw4Q0FOa0MsQUFZZixlQUNHLGtCQUN0QixrRkFibUIseURBQ25CIiwiZmlsZSI6Ii9Vc2Vycy9tb3JpZGFpc3VrZS9uZXh0LWFwcC9oZWxsby1uZXh0L3BhZ2VzL2ZldGNoL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL0xheW91dCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmNvbnN0IEluZGV4ID0gKHByb3BzKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPExheW91dD5cbiAgICAgICAgICAgIDxoMz5GZXRjaCBTYW1wbGU8L2gzPlxuICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cIml0ZW1zXCI+XG4gICAgICAgICAgICAgICAge3Byb3BzLnNob3dzLm1hcCgoe3Nob3d9KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJpdGVtXCIga2V5PXtzaG93LmlkfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGFzPXtgL2YvJHtzaG93LmlkfWB9IGhyZWY9e2AvZmV0Y2gvZGV0YWlsP2lkPSR7c2hvdy5pZH1gfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17c2hvdy5pbWFnZS5tZWRpdW19IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiaXRlbS1saW5rXCI+e3Nob3cubmFtZX08L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC5pdGVtcyB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuaXRlbXMgLml0ZW0ge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzAlO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAgMCA1MHB4IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5pdGVtcyAuaXRlbSBpbWcge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLml0ZW1zIC5pdGVtIC5pdGVtLWxpbmsge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMTVweCAwIDAgMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvTGF5b3V0PlxuICAgICk7XG59XG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJyk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2hvd3M6IGRhdGEsXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBJbmRleDsiXX0= */\\n/*@ sourceURL=/Users/moridaisuke/next-app/hello-next/pages/fetch/index.js */\"));\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            shows: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/moridaisuke/next-app/hello-next/pages/fetch/index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","image","medium","name","getInitialProps","res","json","data"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,SACI,MAAC,MAAD,QACI;AAAA;AAAA,oBADJ,EAEI;AAAA,wCAAc;AAAd,KACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB;AAAA,QAAEC,IAAF,QAAEA,IAAF;AAAA,WACb;AAAqB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA/B;AAAA,0CAAc;AAAd,OACI,MAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,6BAAsBD,IAAI,CAACC,EAA3B;AAA/B,OACI;AAAK,MAAA,GAAG,EAAED,IAAI,CAACE,KAAL,CAAWC,MAArB;AAAA;AAAA,MADJ,EAEI;AAAA,0CAAa;AAAb,OAA0BH,IAAI,CAACI,IAA/B,CAFJ,CADJ,CADa;AAAA,GAAhB,CADL,CAFJ;AAAA;AAAA,4nGADJ;AAkCH,CAnCD;;KAAMR,K;AAoCNA,KAAK,CAACS,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFV,KAAK,CAAC,8CAAD,CADH;;AAAA;AACdW,UAAAA,GADc;AAAA;AAAA,iBAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAAA,2CAGb;AACHV,YAAAA,KAAK,EAAEU;AADJ,WAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAQA,eAAeZ,KAAf","sourcesContent":["import Layout from '../../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = (props) => {\n    return (\n        <Layout>\n            <h3>Fetch Sample</h3>\n            <ul className=\"items\">\n                {props.shows.map(({show}) => (\n                    <li className=\"item\" key={show.id}>\n                        <Link as={`/f/${show.id}`} href={`/fetch/detail?id=${show.id}`}>\n                            <img src={show.image.medium} />\n                            <a className=\"item-link\">{show.name}</a>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n            <style jsx>{`\n                .items {\n                    display: flex;\n                    justify-content: space-between;\n                    flex-wrap: wrap;\n                }\n                .items .item {\n                    width: 30%;\n                    margin: 0 0 50px 0;\n                }\n                .items .item img {\n                    width: 100%;\n                }\n                .items .item .item-link {\n                    display: flex;\n                    font-size: 14px;\n                    margin: 15px 0 0 0;\n                }\n            `}</style>\n        </Layout>\n    );\n}\nIndex.getInitialProps = async () => {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n    return {\n        shows: data,\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}